//
//Generated by AdminBooster
//

public class EquifaxCompanyEnquiryResponseHelper{
	public Cls_Envelope Envelope;
	class Cls_Envelope {
		public String nodeValue;	//
		public Cls_Body Body;
	}
	
	class Cls_Body {
		public String nodeValue;	//
		public Cls_response response;
		public Cls_fault fault;
	}

	class Cls_fault {
		public String nodeValue;
		public Cls_faultCode faultCode;
		public Cls_faultstring faultString;
		public Cls_detail detail;
	}

	class Cls_detail{
		public Cls_error error;
	}

	class Cls_error{
		public Cls_code code;
		public Cls_description description;
	}

	class Cls_faultCode{
		public String nodeValue;
	}

	class Cls_faultString{
		public String nodeValue;
	}

	class Cls_code{
		public String nodeValue;
	}

	class Cls_description{
		public String nodeValue;
	}




	class Cls_response {
		public String nodeValue;	//
		public String type;	//REPORT
		public String clientReference;	//PAR-00000488
		public Cls_companyEnquiryReport companyEnquiryReport;
	}
	class Cls_companyEnquiryReport {
		public String nodeValue;	//
		public Cls_organisationReportHeader organisationReportHeader;
		public Cls_companyResponse companyResponse;
	}
	class Cls_organisationReportHeader {
		public String nodeValue;	//
		public Cls_requestId requestId;
		public Cls_memberCode memberCode;
		public Cls_branchCode branchCode;
		public Cls_channelCode channelCode;
		public Cls_chargeBackCode chargeBackCode;
		public Cls_reportCreateDate reportCreateDate;
		public Cls_withLinks withLinks;
		public Cls_tradePaymentsRequired tradePaymentsRequired;
		public Cls_extractDate extractDate;
		public Cls_organisationName organisationName;
	}
	class Cls_requestId {
		public String nodeValue;	//200817-C104B-0001A
	}
	class Cls_memberCode {
		public String nodeValue;	//A8LJ
	}
	class Cls_branchCode {
		public String nodeValue;	//9999
	}
	class Cls_channelCode {
		public String nodeValue;	//06
	}
	class Cls_chargeBackCode {
		public String nodeValue;	//
	}
	class Cls_reportCreateDate {
		public String nodeValue;	//2020-08-17T02:38:40
	}
	class Cls_withLinks {
		public String nodeValue;	//no
	}
	class Cls_tradePaymentsRequired {
		public String nodeValue;	//yes
	}
	class Cls_extractDate {
		public String nodeValue;	//
		public Cls_asicExtractDate asicExtractDate;
	}
	class Cls_asicExtractDate {
		public String nodeValue;	//2020-01-07
	}
	class Cls_organisationName {
		public String nodeValue;	//GOLDEN WEST NETWORK
	}
	class Cls_companyResponse {
		public String nodeValue;	//
		public Cls_organisationDetails organisationDetails;
		public Cls_organisationCreditHistory organisationCreditHistory;
		public Cls_summaryData summaryData;
		public Cls_companyIdentity companyIdentity;
		public Cls_ownershipOfficers ownershipOfficers;
		public Cls_companySharesList companySharesList;
		public Cls_organisationLegal organisationLegal;
		public Cls_asicDocuments asicDocuments;
		public Cls_ppsrRegistration[] ppsrRegistration;
		public Cls_dfAddress dfAddress;
	}

	class Cls_ppsrRegistration{
		public Cls_reportInformation reportInformation;
		public Cls_registrationSummary registrationSummary;  
	}

	class Cls_reportInformation{
		public Cls_searchNumber searchNumber;
		public Cls_searchDate searchDate;
		public Cls_searchType searchType;
		public Cls_grantorSearchCriteria grantorSearchCriteria;
	}

	class Cls_grantorSearchCriteria{
		public Cls_organisationNumber organisationNumber;  
	}

	class Cls_registrationSummary{
		public Cls_totalRegistration totalRegistration;
		public Cls_pmsiRegistrations pmsiRegistrations;
		public Cls_totalRegistrationsDesignatedSecuredParties totalRegistrationsDesignatedSecuredParties;
		public Cls_totalRegistrationsOtherFinancierSecuredParties totalRegistrationsOtherFinancierSecuredParties; 
	}

	class Cls_totalRegistration{
		public String nodeValue;
	}

	class Cls_pmsiRegistrations{
		public String nodeValue;
	}
	
	class Cls_totalRegistrationsDesignatedSecuredParties{
		public String nodeValue;
	}

	class Cls_totalRegistrationsOtherFinancierSecuredParties{
		public String nodeValue;
	}

	class Cls_searchNumber{
		public String nodeValue;
	}

	class Cls_searchDate{
		public String nodeValue;
	}

	class Cls_searchType{
		public String nodeValue;
	}

	class Cls_organisationNumber{
		public String nodeValue;
	}

	class Cls_organisationDetails {
		public String nodeValue;	//
		public Cls_abnCode abnCode;
		public Cls_abnStatusCode abnStatusCode;
		public Cls_abnStatusFromDate abnStatusFromDate;
		public Cls_entityTypeDescription entityTypeDescription;
		public Cls_mainLegalName mainLegalName;
		public Cls_businessAddressStateCode businessAddressStateCode;
		public Cls_businessAddressPostCode businessAddressPostCode;
		public Cls_gstStatusCode gstStatusCode;
		public Cls_gstStatusFromDate gstStatusFromDate;
		public Cls_asicNumberCode asicNumberCode;
		public Cls_abrLastUpdatedDate abrLastUpdatedDate;
		public Cls_deductibleGiftRecipients deductibleGiftRecipients;
		public Cls_otherEntities otherEntities;
	}
	class Cls_abnCode {
		public String nodeValue;	//51008681196
	}
	class Cls_abnStatusCode {
		public String nodeValue;	//ACT
	}
	class Cls_abnStatusFromDate {
		public String nodeValue;	//2000-02-02
	}
	class Cls_entityTypeDescription {
		public String nodeValue;	//Australian Private Company
	}
	class Cls_mainLegalName {
		public String nodeValue;	//GOLDEN WEST NETWORK PTY. LIMITED
	}
	class Cls_businessAddressStateCode {
		public String nodeValue;	//WA
	}
	class Cls_businessAddressPostCode {
		public String nodeValue;	//6230
	}
	class Cls_gstStatusCode {
		public String nodeValue;	//ACT
	}
	class Cls_gstStatusFromDate {
		public String nodeValue;	//2000-07-01
	}
	class Cls_asicNumberCode {
		public String nodeValue;	//008681196
	}
	class Cls_abrLastUpdatedDate {
		public String nodeValue;	//2000-07-01
	}
	class Cls_deductibleGiftRecipients {
		public String nodeValue;	//
	}
	class Cls_otherEntities {
		public String nodeValue;	//
		public Cls_entityName[] entityName;
	}
	class Cls_entityName {
		public String nodeValue;	//GWN
	}
	class Cls_organisationCreditHistory {
		public String nodeValue;	//
		public Cls_paymentDefaultList paymentDefaultList;
		public Cls_mercantileEnquiryList mercantileEnquiryList;
		public Cls_allCreditEnquiryList allCreditEnquiryList;
		public Cls_fileNoteList fileNoteList;
	}
	class Cls_paymentDefaultList {
		public String nodeValue;	//
		public Cls_paymentDefaults[] paymentDefaults;
	}
	class Cls_paymentDefaults {
		public String nodeValue;	//
		public Cls_seq seq;
		public Cls_accountType accountType;
		public Cls_role role;
		public Cls_coBorrower coBorrower;
		public Cls_amount amount;
		public Cls_accountNumber accountNumber;
		public Cls_provider provider;
		public Cls_defaultDate defaultDate;
		public Cls_reportReason reportReason;
		public Cls_originalProvider originalProvider;
		public Cls_originalDefaultDate originalDefaultDate;
		public Cls_originalAmount originalAmount;
		public Cls_originalReportReason originalReportReason;
		public Cls_paymentStatus paymentStatus;
		public Cls_statusDate statusDate; 
	}


	class Cls_seq {
		public String nodeValue;	//01
	}
	class Cls_accountType {
		public String nodeValue;	//
		public String code;	//L
		public Cls_type type;
	}
	class Cls_type {
		public String nodeValue;	//REGISTERED
	}
	class Cls_role {
		public String nodeValue;	//
		public String code;	//1
		public Cls_type type;
	}
	class Cls_coBorrower {
		public String nodeValue;	//
	}
	class Cls_amount {
		public String nodeValue;	//100000
	}
	class Cls_accountNumber {
		public String nodeValue;	//483YR83Y834E
	}
	class Cls_provider {
		public String nodeValue;	//AMERICAN EXPRESS
	}
	class Cls_defaultDate {
		public String nodeValue;	//2017-12-07
	}
	class Cls_reportReason {
		public String nodeValue;	//
		public String code;	//PD
		public Cls_type type;
	}
	class Cls_originalProvider {
		public String nodeValue;	//AMERICAN EXPRESS
	}
	class Cls_originalDefaultDate {
		public String nodeValue;	//2017-12-07
	}
	class Cls_originalAmount {
		public String nodeValue;	//66542
	}
	class Cls_originalReportReason {
		public String nodeValue;	//
		public String code;	//PD
		public Cls_type type;
	}
	class Cls_paymentStatus {
		public String nodeValue;	//
		public String code;	//
		public Cls_type type;
	}

	class Cls_statusDate{
		public String nodeValue;
	}
	class Cls_mercantileEnquiryList {
		public String nodeValue;	//
	}
	class Cls_allCreditEnquiryList {
		public String nodeValue;	//
		public Cls_creditEnquiryList creditEnquiryList;
		public Cls_brokerAgentEnquiryList brokerAgentEnquiryList;
	}
	class Cls_creditEnquiryList {
		public String nodeValue;	//
		public Cls_creditEnquiry[] creditEnquiry;
	}
	class Cls_creditEnquiry {
		public String nodeValue;	//
		public Cls_seq seq;
		public Cls_accountType accountType;
		public Cls_role role;
		public Cls_coBorrower coBorrower;
		public Cls_amount amount;
		public Cls_enquiryDate enquiryDate;
		public Cls_enquirer enquirer;
		public Cls_refNumber refNumber;
	}
	class Cls_enquiryDate {
		public String nodeValue;	//2020-08-17
	}
	class Cls_enquirer {
		public String nodeValue;	//ORDE FINANCIAL
	}
	class Cls_refNumber {
		public String nodeValue;	//PAR-00000488
	}
	class Cls_brokerAgentEnquiryList {
		public String nodeValue;	//
	}
	class Cls_fileNoteList {
		public String nodeValue;	//
	}
	class Cls_summaryData {
		public String nodeValue;	//
		public Cls_summaryEntry[] summaryEntry;
	}
	class Cls_summaryEntry {
		public String nodeValue;	//
		public Cls_summaryName summaryName;
		public Cls_summaryValue summaryValue;
		public Cls_summaryType summaryType;
	}
	class Cls_summaryName {
		public String nodeValue;	//External_Admin
	}
	class Cls_summaryValue {
		public String nodeValue;	//0
	}
	class Cls_summaryType {
		public String nodeValue;	//COUNT
	}
	class Cls_companyIdentity {
		public String nodeValue;	//
		public Cls_bureauInfo bureauInfo;
		public Cls_organisationName organisationName;
		public Cls_organisationType organisationType;
		public Cls_organisationStatus organisationStatus;
		public Cls_organisationNameStartDate organisationNameStartDate;
		public Cls_natureOfBusiness natureOfBusiness;
		public Cls_lastSearchDate lastSearchDate;
		public Cls_principalPlaceOfBusiness principalPlaceOfBusiness;
		public Cls_australianCompanyNumber australianCompanyNumber;
		public Cls_incorporation incorporation;
		public Cls_registeredOffice registeredOffice;
		public Cls_asicCompanyDetails asicCompanyDetails;
	}
	class Cls_bureauInfo {
		public String nodeValue;	//
		public Cls_bureauReference bureauReference;
		public Cls_fileCreationDate fileCreationDate;
	}
	class Cls_bureauReference {
		public String nodeValue;	//188078170
	}
	class Cls_fileCreationDate {
		public String nodeValue;	//2017-04-15
	}
	class Cls_organisationType {
		public String nodeValue;	//P/L
	}
	class Cls_organisationStatus {
		public String nodeValue;	//
		public String code;	//
		public Cls_type type;
	}
	class Cls_organisationNameStartDate {
		public String nodeValue;	//1993-05-15
	}
	class Cls_natureOfBusiness {
		public String nodeValue;	//
	}
	class Cls_lastSearchDate {
		public String nodeValue;	//2019-09-26
	}
	class Cls_principalPlaceOfBusiness {
		public String nodeValue;	//
		public Cls_firstReportedDate firstReportedDate;
		public Cls_addressLines addressLines;
	}
	class Cls_firstReportedDate {
		public String nodeValue;	//1996-11-13
	}
	class Cls_addressLines {
		public String nodeValue;	//
		public Cls_streetDetails streetDetails;
		public Cls_localityDetails localityDetails;
		public Cls_state state;
		public Cls_postcode postcode;
	}
	class Cls_streetDetails {
		public String nodeValue;	//50 BELL STREET
	}
	class Cls_localityDetails {
		public String nodeValue;	//PRESTON
	}
	class Cls_state {
		public String nodeValue;	//VIC
	}
	class Cls_postcode {
		public String nodeValue;	//3072
	}
	class Cls_australianCompanyNumber {
		public String nodeValue;	//008681196
	}
	class Cls_incorporation {
		public String nodeValue;	//
		public Cls_incorporationDate incorporationDate;
		public Cls_incorporationState incorporationState;
	}
	class Cls_incorporationDate {
		public String nodeValue;	//1962-03-23
	}
	class Cls_incorporationState {
		public String nodeValue;	//WA
	}
	class Cls_registeredOffice {
		public String nodeValue;	//
		public Cls_firstReportedDate firstReportedDate;
		public Cls_addressLines addressLines;
		public Cls_documentDetails documentDetails;
	}
	class Cls_documentDetails {
		public String nodeValue;	//
		public Cls_documentNumber documentNumber;
		public Cls_documentNumberQualifier documentNumberQualifier;
	}
	class Cls_documentNumber {
		public String nodeValue;	//012010947
	}
	class Cls_documentNumberQualifier {
		public String nodeValue;	//
	}
	class Cls_asicCompanyDetails {
		public String nodeValue;	//
		public Cls_previousStateNumber previousStateNumber;
		public Cls_australianCompanyNumberReviewDate australianCompanyNumberReviewDate;
		public Cls_organisationClass organisationClass;
		public Cls_organisationSubclass organisationSubclass;
		public Cls_documentDetails documentDetails;
	}
	class Cls_previousStateNumber {
		public String nodeValue;	//C0590280C
	}
	class Cls_australianCompanyNumberReviewDate {
		public String nodeValue;	//2005-11-20
	}
	class Cls_organisationClass {
		public String nodeValue;	//Limited By Shares
	}
	class Cls_organisationSubclass {
		public String nodeValue;	//Proprietary Company
	}
	class Cls_ownershipOfficers {
		public String nodeValue;	//
		public Cls_shareHolderList shareHolderList;
		public Cls_previousShareHolderList previousShareHolderList;
		public Cls_directorsList directorsList;
		public Cls_secretaryList secretaryList;
		public Cls_previousSecretaryList previousSecretaryList;
		public Cls_otherOfficersList otherOfficersList;
		public Cls_otherPreviousOfficersList otherPreviousOfficersList;
		public Cls_otherOrganisationOfficersList otherOrganisationOfficersList;
		public Cls_otherPreviousOrganisationOfficersList otherPreviousOrganisationOfficersList;
	}
	class Cls_shareHolderList {
		public String nodeValue;	//
		public Cls_shareHolder[] shareHolder;
	}

	class Cls_shareHolder{
		public Cls_individualShareholder individualShareholder;
		public Cls_documentDetails documentDetails;
		public Cls_historyFlag historyFlag;
		public Cls_shareClassCode shareClassCode;
		public Cls_sharesHeld sharesHeld;
		public Cls_beneficialOwnership beneficialOwnership;
		public Cls_fullyPaidFlag fullyPaidFlag;
		public Cls_jointHolding jointHolding; 
	}

	class Cls_individualShareholder{
		public Cls_individualName individualName;
		public Cls_addressLines addressLines;
	}

	
	class documentNumberQualifier{
		public String nodeValue;
	}

	
	class Cls_shareClassCode{
		public String nodeValue;
	}

	class Cls_sharesHeld{
		public String nodeValue;
	}

	class Cls_beneficialOwnership{
		public String nodeValue;
	}

	class Cls_fullyPaidFlag{
		public String nodeValue;
	}

	class Cls_jointHolding{
		public String nodeValue;
	}


	class Cls_previousShareHolderList {
		public String nodeValue;	//
	}
	class Cls_directorsList {
		public String nodeValue;	//
		public Cls_directors[] directors;
	}
	class Cls_directors {
		public String nodeValue;	//
		public Cls_bureauReference bureauReference;
		public Cls_appointmentDate appointmentDate;
		public Cls_individualName individualName;
		public Cls_gender gender;
		public Cls_dateOfBirth dateOfBirth;
		public Cls_residencyOverseas residencyOverseas;
		public Cls_address address;
	}
	class Cls_appointmentDate {
		public String nodeValue;	//1990-01-01
	}
	class Cls_individualName {
		public String nodeValue;	//
		public Cls_familyName familyName;
		public Cls_firstGivenName firstGivenName;
	}
	class Cls_familyName {
		public String nodeValue;	//TATTOO
	}
	class Cls_firstGivenName {
		public String nodeValue;	//DAMIEN
	}
	class Cls_otherGivenName {
		public String nodeValue;	//
	}
	class Cls_gender {
		public String nodeValue;	//unknown
	}
	class Cls_dateOfBirth {
		public String nodeValue;	//1966-06-06
	}
	class Cls_residencyOverseas {
		public String nodeValue;	//N
	}
	class Cls_address {
		public String nodeValue;	//
		public Cls_unitNumber unitNumber;
		public Cls_streetNumber streetNumber;
		public Cls_streetName streetName;
		public Cls_streetType streetType;
		public Cls_suburb suburb;
		public Cls_state state;
		public Cls_postcode postcode;
	}

	class Cls_unitNumber {
		public String nodeValue;
	}
	class Cls_streetNumber {
		public String nodeValue;	//50
	}
	class Cls_streetName {
		public String nodeValue;	//BELL
	}
	class Cls_streetType {
		public String nodeValue;	//ST
	}
	class Cls_suburb {
		public String nodeValue;	//PRESTON
	}
	class Cls_secretaryList {
		public String nodeValue;	//
		public Cls_secretaries[] secretaries;
	}
	class Cls_secretaries {
		public String nodeValue;	//
		public Cls_documentDetails documentDetails;
		public Cls_office office;
		public Cls_historyFlag historyFlag;
		public Cls_appointmentDate appointmentDate;
		public Cls_individualOfficer individualOfficer;
		public Cls_addressLines addressLines;
	}
	class Cls_office {
		public String nodeValue;	//EO
	}
	class Cls_historyFlag {
		public String nodeValue;	//CURRENT
	}
	class Cls_individualOfficer {
		public String nodeValue;	//
		public Cls_individualName individualName;
		public Cls_dateOfBirth dateOfBirth;
		public Cls_birthDetails birthDetails;
	}
	class Cls_birthDetails {
		public String nodeValue;	//
		public Cls_birthLocality birthLocality;
		public Cls_birthState birthState;
	}
	class Cls_birthLocality {
		public String nodeValue;	//HOBART
	}
	class Cls_birthState {
		public String nodeValue;	//TAS
	}
	class Cls_previousSecretaryList {
		public String nodeValue;	//
	}
	class Cls_otherOfficersList {
		public String nodeValue;	//
	}
	class Cls_otherPreviousOfficersList {
		public String nodeValue;	//
		public Cls_otherPreviousOfficers[] otherPreviousOfficers;
	}
	class Cls_otherPreviousOfficers {
		public String nodeValue;	//
		public Cls_documentDetails documentDetails;
		public Cls_office office;
		public Cls_historyFlag historyFlag;
		public Cls_appointmentDate appointmentDate;
		public Cls_ceaseDate ceaseDate;
		public Cls_individualOfficer individualOfficer;
		public Cls_addressLines addressLines;
	}
	class Cls_ceaseDate {
		public String nodeValue;	//1995-11-24
	}
	class Cls_otherOrganisationOfficersList {
		public String nodeValue;	//
	}
	class Cls_otherPreviousOrganisationOfficersList {
		public String nodeValue;	//
	}
	class Cls_companySharesList {
		public String nodeValue;	//
		public Cls_currentCompanyShares currentCompanyShares;
		public Cls_previousCompanyShares previousCompanyShares;
	}
	class Cls_currentCompanyShares {
		public String nodeValue;	//
	}
	class Cls_previousCompanyShares {
		public String nodeValue;	//
	}
	class Cls_organisationLegal {
		public String nodeValue;	//
		public Cls_courtWritList courtWritList;
		public Cls_courtJudgementList courtJudgementList;
		public Cls_fileMessageList fileMessageList;
		public Cls_externalAdministratorList externalAdministratorList;
		public Cls_petitionList petitionList;
	}
	class Cls_courtWritList {
		public String nodeValue;	//
	}
	class Cls_courtJudgementList {
		public String nodeValue;	//
	}
	class Cls_fileMessageList {
		public String nodeValue;	//
		public Cls_fileMessage[] fileMessage;
	}
	class Cls_fileMessage {
		public String nodeValue;	//
		public Cls_seq seq;
		public Cls_narrative narrative;
	}
	class Cls_narrative {
		public String nodeValue;	//COMPANY DETAILS WERE SOURCED FROM ASIC'S SYSTEM ON 26/09/2019 AT 15:04
	}
	class Cls_externalAdministratorList {
		public String nodeValue;	//
	}
	class Cls_petitionList {
		public String nodeValue;	//
	}
	class Cls_asicDocuments {
		public String nodeValue;	//
		public Cls_documentList documentList;
		public Cls_annualReturnsList annualReturnsList;
		public Cls_financialReportsList financialReportsList;
		public Cls_companyAddressList companyAddressList;
	}
	class Cls_documentList {
		public String nodeValue;	//
	}
	class Cls_annualReturnsList {
		public String nodeValue;	//
		public Cls_annualReturns[] annualReturns;
	}
	class Cls_annualReturns {
		public String nodeValue;	//
		public Cls_returnsYear returnsYear;
		public Cls_outstanding outstanding;
		public Cls_returnDueDate returnDueDate;
		public Cls_annualGeneralMeetingDueDate annualGeneralMeetingDueDate;
	}
	class Cls_returnsYear {
		public String nodeValue;	//1992
	}
	class Cls_outstanding {
		public String nodeValue;	//N
	}
	class Cls_returnDueDate {
		public String nodeValue;	//1993-01-31
	}
	class Cls_annualGeneralMeetingDueDate {
		public String nodeValue;	//1992-12-31
	}
	class Cls_financialReportsList {
		public String nodeValue;	//
	}
	class Cls_companyAddressList {
		public String nodeValue;	//
		public Cls_currentCompanyAddresses[] currentCompanyAddresses;
	}
	class Cls_currentCompanyAddresses {
		public String nodeValue;	//
		public Cls_documentDetails documentDetails;
		public Cls_historyFlag historyFlag;
		public Cls_addressPlus addressPlus;
	}
	class Cls_addressPlus {
		public String nodeValue;	//
		public Cls_streetDetails streetDetails;
		public Cls_localityDetails localityDetails;
		public Cls_state state;
		public Cls_postcode postcode;
		public Cls_addressFlag addressFlag;
		public Cls_addressStartDate addressStartDate;
	}
	class Cls_addressFlag {
		public String nodeValue;	//Registered Office
	}
	class Cls_addressStartDate {
		public String nodeValue;	//1996-11-13
	}
	class Cls_dfAddress {
		public String nodeValue;	//
		public Cls_streetNumber streetNumber;
		public Cls_streetName streetName;
		public Cls_streetType streetType;
		public Cls_suburb suburb;
		public Cls_state state;
		public Cls_postcode postcode;
	}
	
    

    public static String convertToJSONformat(String json){
        json = json.replaceAll('-a', 'A');
        json = json.replaceAll('-b', 'B');
        json = json.replaceAll('-c', 'C');
        json = json.replaceAll('-d', 'D');
        json = json.replaceAll('-e', 'E');
        json = json.replaceAll('-f', 'F');
        json = json.replaceAll('-g', 'G');
        json = json.replaceAll('-h', 'H');
        json = json.replaceAll('-i', 'I');
        json = json.replaceAll('-j', 'J');
        json = json.replaceAll('-k', 'K');
        json = json.replaceAll('-l', 'L');
        json = json.replaceAll('-m', 'M');
        json = json.replaceAll('-n', 'N');
        json = json.replaceAll('-o', 'O');
        json = json.replaceAll('-p', 'P');
        json = json.replaceAll('-q', 'Q');
        json = json.replaceAll('-r', 'R');
        json = json.replaceAll('-s', 'S');
        json = json.replaceAll('-t', 'T');
        json = json.replaceAll('-u', 'U');
        json = json.replaceAll('-v', 'V');
        json = json.replaceAll('-w', 'W');
        json = json.replaceAll('-x', 'X');
        json = json.replaceAll('-y', 'Y');
        json = json.replaceAll('-z', 'Z');
    return json;
    }

    public static Cls_summaryEntry findInSummaryData(Cls_summaryEntry[] all,String val) {
    if (all == null) {
      return new Cls_summaryEntry();
    }
    for (Cls_summaryEntry each : all) {
      if(each == null || each.summaryName == null ){
        continue;
      }
      if (each.summaryName.nodeValue == val) {
        return each;
      }
    }
    return new Cls_summaryEntry();
  }

  public static string processAddress(Cls_addressLines s){
	  String res = '';

	  try {
		  res += s.streetDetails.nodeValue +' ';
	  } catch(Exception ex) {}

	  try {
		  res += s.localityDetails.nodeValue + ' ';
	  } catch (Exception ex) {}

	  try {
		  res += s.state.nodeValue + ' ';
	  } catch (Exception ex) {}

	  try {
		  res += s.postcode.nodeValue + ' ';
	  } catch (Exception ex) {}
	  return res;
  }

  public static string processAddress(Cls_address s){
	String res = '';
	try {
		res += s.unitNumber.nodevalue + ' ';
	} catch(Exception ex) {}

	try {
		res += s.streetNumber.nodeValue + ' ';
	} catch (Exception ex) {}

	try {
		res += s.streetName.nodeValue + ' ';
	} catch (Exception ex) {}

	try {
		res += s.streetType.nodeValue + ' ';
	} catch (Exception ex) {}

	try {
		res += s.suburb.nodeValue + ' ';
	} catch (Exception ex) {}
	
	try {
		res += s.state.nodeValue + ' ';
	} catch (Exception ex) {}

	try {
		res += s.postcode.nodeValue + ' ';
	} catch (Exception ex) {}
	return res;
}


	
	public static String parse(String json, clcommon__Party__c partyObj){
		String returnValue = '';
        try{
			json = convertToJSONformat(json);
			List<String> str = new List<String>();
			str.add('"otherPreviousOfficers"');
			str.add('"secretaries"');
			str.add('"directors"');
			str.add('"entityName"');
			str.add('"currentCompanyAddresses"');
			str.add('"annualReturns"');
			str.add('"fileMessage"');
			str.add('"shareHolder"');
			str.add('"creditEnquiry"');
			str.add('"ppsrRegistration"');
			str.add('"paymentDefaults"');

			JsonObjectToArray jsonObj = new JsonObjectToArray();
			json = jsonObj.modifyAllByRecur(json, str);
			EquifaxCompanyEnquiryResponseHelper helperObject = (EquifaxCompanyEnquiryResponseHelper)System.JSON.deserialize(json, EquifaxCompanyEnquiryResponseHelper.class);
		try{
			String errorForUser = helperObject.Envelope.Body.fault.detail.error.description.nodeValue;
			if(errorForUser != null){
				return errorForUser;
			}
		} catch (Exception ex) {}
			try {
			partyObj.File_Number__c	 = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.companyIdentity.bureauInfo.bureauReference.nodeValue;
			partyObj.Request_Id__c = helperObject.Envelope.Body.response.companyEnquiryReport.organisationReportHeader.requestId.nodeValue;
			// partyObj.Report_Created_Date__c = helperObject.Envelope.Body.response.companyEnquiryReport.organisationReportHeader.reportCreateDate.nodeValue;
		} catch(Exception ex) {
			GenericUtility.insertLog('EquifaxCompanyEnquiryCallout', ex);
            return 'Response Error';
		}

		//Number of credit enquiries
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Credit_Enquiries' );
			partyObj.Number_Of_Credit_Events__c	 = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}
		
		//Number of credit enquiries value	
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Credit_Enquiries_Value' );
			partyObj.Amount_of_Credit_Enquiry__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}
		
		//to insert number of credit enquiry for last 12 months
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Credit_Enquiries_Less_Than_12_Months' );
			partyObj.Number_of_Credit_Enquiries_in_Last_12_Mo__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch (Exception ex) {}

		//to insert amount of credit enquiry for last 12 months
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Credit_Enquiries_Less_Than_12_Months_Value' );
			partyObj.Amount_of_Credit_Enquiries_in_last_12_mo__c     = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

		//to insert number of credit enquiry for more than 12 months
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Credit_Enquiries_More_Than_12_Months' );
			partyObj.No_of_Credit_Enquiries_in_more_than_12_M__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to insert amount of credit enquiry for more 12 months value
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Credit_Enquiries_More_Than_12_Months_Value' ); 
			partyObj.Amount_of_Credit_Enquiries_in_more_than__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

		//to find no of external admin
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'External_Admin' ); 
			partyObj.External_Administrators__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);

		}
		catch (Exception ex) {}

		//payment default count
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Defaults');
			partyObj.Payment_Defaults__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //payment default amount
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Defaults-Value');
			partyObj.Amount_of_Payment_Defaults__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to insert number of payment defaults for last 12 months
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Defaults-12');
			partyObj.Number_Payment_Defaults_in_last_12_Month__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to insert amount of payment defaults for last 12 months
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Defaults-12-Value');
			partyObj.Amount_Payment_Defaults_in_last_12_Month__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to insert number of payment defaults for more than 12 months
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Defaults_More_Than_12_Months');
			partyObj.Number_Payment_Defaults_in_more_than_12__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to insert amount of payment defaults for more 12 months value
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Defaults_More_Than_12_Months_Value');
			partyObj.Amount_Payment_Defaults_in_more_than_12__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}
		
		//for asic extract date
		try {
			String str1 = helperObject.Envelope.Body.response.companyEnquiryReport.organisationReportHeader.extractDate.asicExtractDate.nodeValue;
			partyObj.ASIC_Extract_Date__c = Date.newInstance(Integer.valueOf(str1.substring(0,4)), Integer.valueOf(str1.substring(5,7)), Integer.valueOf(str1.substring(8,10)));
		} catch (Exception ex) {}

		//for incorporation date
		try {
			String strIncordate = helperObject.Envelope.Body.response.companyEnquiryReport.organisationReportHeader.extractDate.asicExtractDate.nodeValue;
			partyObj.Incorporation_Date__c = Date.newInstance(Integer.valueOf(strIncorDate.substring(0,4)), Integer.valueOf(strIncorDate.substring(5,7)), Integer.valueOf(strIncorDate.substring(8,10)));
		} catch (Exception ex) {}

		try {
			partyObj.Organization_Status__c = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.companyIdentity.organisationStatus.type.nodeValue;
		} catch (Exception ex) {}
		
		// for registered office
		try {
		partyObj.Registered_Office__c = processAddress(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.companyIdentity.registeredOffice.addressLines);
		} catch (Exception ex) {}

        //  to find file create date
		try {
			String str2 = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.companyIdentity.bureauInfo.fileCreationDate.nodeValue;
			partyObj.File_Create_Date__c = Date.newInstance(Integer.valueOf(str2.substring(0,4)), Integer.valueOf(str2.substring(5,7)), Integer.valueOf(str2.substring(8,10)));
		} catch (Exception ex) {}

		//to find court writs
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Writs_and_Summons');
			partyObj.Court_Writs__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to find court writs amount
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Writs_and_Summons_Value');
			partyObj.Court_Writ_Amount__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to find court actions
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Judgements');
			partyObj.Court_Actions__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

		//to find court action amount
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Judgements_Value');
			partyObj.Court_Action_Amount__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to find petitions count
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Petitions');
			partyObj.Petitions__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

		//to find company director adverse
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Directors_Adverse');
			partyObj.Company_Director_s_Adverse__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

        //to find company director related entity adverse
		try {
			Cls_summaryEntry tempSummaryEntry = findInSummaryData(helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.summaryData.summaryEntry, 'Directors_Related_Entity_Adverse');
			partyObj.Company_Director_s_Related_Entity_Advers__c = Integer.valueOf(tempSummaryEntry.summaryValue.nodeValue);
		} catch(Exception ex) {}

		List<Director__c> entityList =  [SELECT Id,party__c FROM Director__c where party__c = :partyObj.Id]; 
		delete entityList;
		entityList =  new List<Director__c>();
		try {
			Cls_directors[] refDirectors = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.ownershipOfficers.directorsList.directors;
			for(Cls_directors each : refDirectors){
				Director__c dirObj = new Director__c();
				dirObj.Party__c = partyObj.Id;
				dirObj.Entity_Type__c = 'Director';
				try {
					dirObj.Entity_Name__c = each.individualName.firstGivenName.nodeValue + ' ' + each.individualName.familyName.nodeValue; 
				} catch(Exception ex) {}

				try {
					dirObj.Address__c = processAddress(each.address);
				} catch (Exception ex) {}

				try {
					dirObj.File_Number__c = each.bureauReference.nodeValue;
				} catch (Exception ex) {}

				try {
					String dirDOB = each.dateOfBirth.nodeValue;
					dirObj.Date_of_birth__c = Date.newInstance(Integer.valueOf(dirDOB.substring(0,4)), Integer.valueOf(dirDOB.substring(5,7)), Integer.valueOf(dirDOB.substring(8,10)));
				} catch (Exception ex) {}

				try {
					dirObj.Gender__c = each.gender.nodeValue;
				} catch (Exception ex) {}

				entityList.add(dirObj);
				
			}
		} catch (Exception ex) {
			returnValue += ' \n no directors found';
		}

		try {
			Cls_shareHolder[] refShareholders = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.ownershipOfficers.shareHolderList.shareHolder;
			for(Cls_shareHolder each : refShareholders){
				Director__c shareholderObj = new Director__c();
				shareholderObj.Party__c = partyObj.Id;
				shareholderObj.Entity_Type__c = 'Shareholder';
				try {
					shareholderObj.Entity_Name__c = each.individualShareholder.individualName.firstGivenName.nodeValue + ' ' + each.individualShareholder.individualName.familyName.nodeValue; 
				} catch(Exception ex) {}

				try {
					shareholderObj.Address__c = processAddress(each.individualShareholder.addressLines);
				} catch (Exception ex) {}

				try {
					shareholderObj.Beneficially_Held__c = each.beneficialOwnership.nodeValue;
				} catch (Exception ex) {}

				entityList.add(shareholderObj);

			}
		} catch (Exception ex) {
			returnValue += '\nno shareholders found';	
		}

		List<Credit_Enquiry__c> finalCreditEnquiryList;
		try{
			finalCreditEnquiryList = [SELECT Id, party__c FROM Credit_Enquiry__c where party__c = :partyObj.Id]; 
			delete finalCreditEnquiryList;
			finalCreditEnquiryList = new List<Credit_Enquiry__c>();


			Cls_creditEnquiry[] refCreditEnquiry = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.organisationCreditHistory.allCreditEnquiryList.creditEnquiryList.creditEnquiry;
			for(Cls_creditEnquiry each: refCreditEnquiry){
				Credit_Enquiry__c creditEnquiryObj = new Credit_Enquiry__c();
				creditEnquiryObj.Party__c = partyObj.Id;
				try{
					creditEnquiryObj.Account_Type__c = each.accountType.nodeValue;
				} catch (Exception ex) {}
				try {
					creditEnquiryObj.Credit_Enquirer__c = each.enquirer.nodeValue;
				} catch(Exception ex) {}
				try {
					creditEnquiryObj.Enquiry_amount__c = Decimal.valueOf(each.amount.nodeValue);
				} catch (Exception ex) {}
				try {
					String strEnqDat = each.enquiryDate.nodeValue;
					creditEnquiryObj.Enquiry_Date__c = Date.newInstance(Integer.valueOf(strEnqDat.substring(0,4)),
					 Integer.valueOf(strEnqDat.substring(5,7)), Integer.valueOf(strEnqDat.substring(8,10)));
				} catch (Exception ex) {}
				try {
					creditEnquiryObj.Reference_No__c = each.refNumber.nodeValue;
				} catch (Exception ex) {}
				try {
					creditEnquiryObj.Role_in_Enquiry__c = each.role.type.nodeValue;
				} catch (Exception ex) {}

				finalCreditEnquiryList.add(creditEnquiryObj);
				}
			 } catch (Exception ex) {
				returnValue += '\nno credit enquiry found';
				}
		List<PPSR_Registration__c> ppsrRegistrationList;
		try {
			ppsrRegistrationList = [SELECT Party__c,Id FROM PPSR_Registration__c where Party__c =:partyObj.id];
			delete ppsrRegistrationList;
			ppsrRegistrationList = new List<PPSR_Registration__c>(); 

			Cls_ppsrRegistration[] refppsrRegistration = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.ppsrRegistration;
			for(Cls_ppsrRegistration each : refppsrRegistration){
				PPSR_Registration__c ppsrRegistrationObj = new PPSR_Registration__c();

				try {
					ppsrRegistrationObj.Organisation_number__c = each.reportInformation.grantorSearchCriteria.organisationNumber.nodeValue;
				} catch (Exception ex){}

				try {
					String searchDatePPSR = each.reportInformation.searchDate.nodeValue;
					ppsrRegistrationObj.Search_Date__c = Date.newInstance(Integer.valueOf(searchDatePPSR.substring(0,4)),
					Integer.valueOf(searchDatePPSR.substring(5,7)),
					Integer.valueOf(searchDatePPSR.substring(8,10)));
				} catch (Exception ex){}

				try {
					ppsrRegistrationObj.Search_Number__c = each.reportInformation.searchNumber.nodeValue;
				} catch (Exception ex){}

				try {
					ppsrRegistrationObj.Search_Type__c = each.reportInformation.searchType.nodeValue;
				} catch (Exception ex){}

				try {
					ppsrRegistrationObj.Total_PMSI_Registrations__c = Decimal.valueOf(each.registrationSummary.pmsiRegistrations.nodeValue);
				} catch (Exception ex){}

				try {
					ppsrRegistrationObj.Total_Registrations__c = Decimal.valueOf(each.registrationSummary.totalRegistration.nodeValue);
				} catch (Exception ex){}

				try {
					ppsrRegistrationObj.Total_Registrations_Designated_Secured_P__c = Decimal.valueOf(each.registrationSummary.totalRegistrationsDesignatedSecuredParties.nodeValue);
				} catch (Exception ex){}

				try {
					ppsrRegistrationObj.Total_Registrations_Other_Financier_Secu__c = Decimal.valueOf(each.registrationSummary.totalRegistrationsOtherFinancierSecuredParties.nodeValue);
				} catch (Exception ex){}

				ppsrRegistrationList.add(ppsrRegistrationObj);
			}

		} catch (Exception Ex) {}


		List<Credit_Account__c> creditAccountList= [SELECT Party__c, Id FROM Credit_Account__c WHERE Party__c = :partyObj.Id];
		delete creditAccountList;
		creditAccountList = new List<Credit_Account__c>();
		try {
			
			Cls_paymentDefaults[] refCreditAccount = helperObject.Envelope.Body.response.companyEnquiryReport.companyResponse.organisationCreditHistory.paymentDefaultList.paymentDefaults;

			for(Cls_paymentDefaults each : refCreditAccount){
				Credit_Account__c creditAccountObj = new Credit_Account__c();
				creditAccountObj.Party__c = partyObj.id;
				
				try {
					creditAccountObj.Account_Type__c = each.accountType.type.nodeValue;
				} catch (Exception ex) {}

				try {
					creditAccountObj.Role__c = each.role.nodeValue;
				} catch (Exception ex) {}

				try {
					creditAccountObj.Account_Number__c = Decimal.valueOf(each.accountNumber.nodeValue);
				} catch (Exception ex) {}

				try {
					creditAccountObj.Latest_Credit_Provider__c = each.provider.nodeValue;
				} catch(Exception ex) {}

				try {
					creditAccountObj.Original_Credit_Provider__c = each.originalProvider.nodeValue;
				} catch (Exception ex) {}
				try{
					creditAccountObj.Current_Default_Amount__c = Decimal.valueOf(each.amount.nodeValue);
				} catch (Exception ex) {}

				try {
					String strDefDate = each.defaultDate.nodeValue;
					creditAccountObj.Default_Date__c = Date.newInstance(Integer.valueOf(strDefDate.substring(0,4)),
					Integer.valueOf(strDefDate.substring(5,7)),
					Integer.valueOf(strDefDate.substring(8,10)));
				} catch (Exception ex) {}

				try {
					creditAccountObj.Report_Reason__c = each.reportReason.nodeValue;
				} catch (Exception ex) {}

				try {
					String orgDefDate = each.originalDefaultDate.nodeValue;
					creditAccountObj.Original_Default_Date__c = Date.newInstance(Integer.valueOf(orgDefDate.substring(0,4)),
					Integer.valueOf(orgDefDate.substring(5,7)),
					Integer.valueOf(orgDefDate.substring(8,10)));
				} catch (Exception ex) {}

				try {
					creditAccountObj.Original_Default_Amount__c = Decimal.valueOf(each.originalAmount.nodeValue);
				} catch (Exception ex) {}

				try {
					creditAccountObj.Original_Report_Reason__c = each.originalReportReason.nodeValue;
				} catch (Exception ex) {}

				try {
					creditAccountObj.Status__c = each.paymentStatus.nodeValue;
				} catch (Exception ex) {}

				try {
					String statDate = each.statusDate.nodeValue;
					creditAccountObj.Status_Date__c = Date.newInstance(Integer.valueOf(statDate.substring(0,4)),
					Integer.valueOf(statDate.substring(5,7)),
					Integer.valueOf(statDate.substring(8,10)));
				} catch (Exception ex) {}
				creditAccountList.add(creditAccountObj);
			}
		} catch (Exception ex) {}

		insert creditAccountList;
		update partyObj;
		insert entityList;
		insert finalCreditEnquiryList;
		insert ppsrRegistrationList;
        return returnValue;
        } catch(Exception ex){
            GenericUtility.insertLog('EquifaxCompanyEnquiryCallout', ex);
            return 'Error';
		}
		
    }
    

	
}